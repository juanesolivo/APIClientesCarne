// <auto-generated />
using System;
using APIClientesCarne.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIClientesCarne.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIClientesCarne.Models.Admin", b =>
                {
                    b.Property<int>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAdmin");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdmin"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaIngreso");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaNacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("rol");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("IdAdmin")
                        .HasName("PK__Admin__B2C3ADE53E68961D");

                    b.HasIndex(new[] { "Username" }, "UQ__Admin__F3DBC57287E53781")
                        .IsUnique();

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("APIClientesCarne.Models.Alerta", b =>
                {
                    b.Property<int>("IdAlerta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAlerta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlerta"));

                    b.Property<string>("Destinatarios")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("destinatarios");

                    b.Property<string>("EstadoAlerta")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("estadoAlerta");

                    b.Property<DateTime?>("FechaGenerada")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaGenerada");

                    b.Property<int>("IdIrregularidad")
                        .HasColumnType("int")
                        .HasColumnName("idIrregularidad");

                    b.Property<string>("Mensaje")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("mensaje");

                    b.HasKey("IdAlerta")
                        .HasName("PK__Alertas__D0995427C10CEF68");

                    b.HasIndex("IdIrregularidad");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Animale", b =>
                {
                    b.Property<int>("IdAnimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAnimal");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnimal"));

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("especie");

                    b.Property<DateTime?>("FechaSacrificio")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaSacrificio");

                    b.Property<int>("IdEstablecimientoSacrificio")
                        .HasColumnType("int")
                        .HasColumnName("idEstablecimientoSacrificio");

                    b.Property<string>("IdentificacionAnimal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("identificacionAnimal");

                    b.HasKey("IdAnimal")
                        .HasName("PK__Animales__0276B503C7CBFA28");

                    b.HasIndex("IdEstablecimientoSacrificio");

                    b.ToTable("Animales");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Documento", b =>
                {
                    b.Property<int>("IdDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDocumento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocumento"));

                    b.Property<DateTime?>("FechaEmision")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaEmision");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaVencimiento");

                    b.Property<int>("IdLote")
                        .HasColumnType("int")
                        .HasColumnName("idLote");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("numeroDocumento");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipoDocumento");

                    b.HasKey("IdDocumento")
                        .HasName("PK__Document__572A36FC42C2B7D6");

                    b.HasIndex("IdLote");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Establecimiento", b =>
                {
                    b.Property<int>("IdEstablecimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstablecimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstablecimiento"));

                    b.Property<string>("CapacidadOperativa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("capacidadOperativa");

                    b.Property<string>("Comerciales")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("comerciales");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccion");

                    b.Property<string>("EstadoEstablecimiento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("estadoEstablecimiento");

                    b.Property<string>("LicenciasCertificaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("licenciasCertificaciones");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("PeriodoVolumen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("periodoVolumen");

                    b.Property<string>("Riesgo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoOperacion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipoOperacion");

                    b.Property<string>("TipoProducto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipoProducto");

                    b.Property<string>("UnidadVolumen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("unidadVolumen");

                    b.Property<string>("VolumenProcesado")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("volumenProcesado");

                    b.HasKey("IdEstablecimiento")
                        .HasName("PK__Establec__A9B5B72F1EB0E388");

                    b.ToTable("Establecimientos");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Inspeccione", b =>
                {
                    b.Property<int>("IdInspeccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idInspeccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInspeccion"));

                    b.Property<string>("Coordenadas")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("coordenadas");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("direccion");

                    b.Property<DateTime?>("FechaInspeccion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaInspeccion");

                    b.Property<int>("IdAdmin")
                        .HasColumnType("int")
                        .HasColumnName("idAdmin");

                    b.Property<int>("IdEstablecimiento")
                        .HasColumnType("int")
                        .HasColumnName("idEstablecimiento");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int")
                        .HasColumnName("idSolicitud");

                    b.Property<int>("IdUsuarioInspector")
                        .HasColumnType("int")
                        .HasColumnName("idUsuarioInspector");

                    b.Property<int?>("Prioridad")
                        .HasColumnType("int")
                        .HasColumnName("prioridad");

                    b.Property<string>("Resultado")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("IdInspeccion")
                        .HasName("PK__Inspecci__A5F326E1EF116B89");

                    b.HasIndex("IdAdmin");

                    b.HasIndex("IdEstablecimiento");

                    b.HasIndex("IdSolicitud");

                    b.HasIndex("IdUsuarioInspector");

                    b.ToTable("Inspecciones");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Irregularidad", b =>
                {
                    b.Property<int>("IdIrregularidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idIrregularidad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIrregularidad"));

                    b.Property<string>("DescripcionIrregularidad")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcionIrregularidad");

                    b.Property<DateTime?>("FechaDetectada")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaDetectada");

                    b.Property<int>("IdEstablecimiento")
                        .HasColumnType("int")
                        .HasColumnName("idEstablecimiento");

                    b.Property<int>("IdLote")
                        .HasColumnType("int")
                        .HasColumnName("idLote");

                    b.Property<int>("IdResultadoInspeccion")
                        .HasColumnType("int")
                        .HasColumnName("idResultadoInspeccion");

                    b.Property<string>("NivelGravedad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nivelGravedad");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipo");

                    b.HasKey("IdIrregularidad")
                        .HasName("PK__Irregula__5591F75316BE9982");

                    b.HasIndex("IdEstablecimiento");

                    b.HasIndex("IdLote");

                    b.HasIndex("IdResultadoInspeccion");

                    b.ToTable("Irregularidad", (string)null);
                });

            modelBuilder.Entity("APIClientesCarne.Models.ItemsVerificacion", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idItem");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"));

                    b.Property<string>("CriterioCumplimiento")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("criterioCumplimiento");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int>("IdLista")
                        .HasColumnType("int")
                        .HasColumnName("idLista");

                    b.Property<int>("NumeroItem")
                        .HasColumnType("int")
                        .HasColumnName("numeroItem");

                    b.HasKey("IdItem")
                        .HasName("PK__ItemsVer__AD19426894AEE37B");

                    b.HasIndex("IdLista");

                    b.ToTable("ItemsVerificacion", (string)null);
                });

            modelBuilder.Entity("APIClientesCarne.Models.ListaVerificacion", b =>
                {
                    b.Property<int>("IdLista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLista");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLista"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int>("IdNormativa")
                        .HasColumnType("int")
                        .HasColumnName("idNormativa");

                    b.Property<string>("NombreLista")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombreLista");

                    b.HasKey("IdLista")
                        .HasName("PK__ListaVer__6C8A0FE56459A74E");

                    b.HasIndex("IdNormativa");

                    b.ToTable("ListaVerificacion", (string)null);
                });

            modelBuilder.Entity("APIClientesCarne.Models.LotesProducto", b =>
                {
                    b.Property<int>("IdLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLote");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLote"));

                    b.Property<string>("CodigoLote")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("codigoLote");

                    b.Property<string>("DescripcionProducto")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcionProducto");

                    b.Property<string>("DestinoFinal")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("destinoFinal");

                    b.Property<DateTime?>("FechaProduccion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaProduccion");

                    b.Property<int>("IdEstablecimiento")
                        .HasColumnType("int")
                        .HasColumnName("idEstablecimiento");

                    b.HasKey("IdLote")
                        .HasName("PK__LotesPro__1B91FFCB0DD5ADFA");

                    b.HasIndex("IdEstablecimiento");

                    b.ToTable("LotesProductos");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Normativa", b =>
                {
                    b.Property<int>("IdNormativa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idNormativa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNormativa"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<DateTime?>("FechaAdmision")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaAdmision");

                    b.Property<DateTime?>("FechaVigencia")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaVigencia");

                    b.Property<string>("NombreNormativa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombreNormativa");

                    b.Property<string>("Version")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("version");

                    b.HasKey("IdNormativa")
                        .HasName("PK__Normativ__531225EA3D23BF5B");

                    b.ToTable("Normativas");
                });

            modelBuilder.Entity("APIClientesCarne.Models.ResultadosInspeccion", b =>
                {
                    b.Property<int>("IdResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idResultado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultado"));

                    b.Property<bool>("Cumple")
                        .HasColumnType("bit")
                        .HasColumnName("cumple");

                    b.Property<int>("IdInspeccion")
                        .HasColumnType("int")
                        .HasColumnName("idInspeccion");

                    b.Property<int>("IdItem")
                        .HasColumnType("int")
                        .HasColumnName("idItem");

                    b.Property<int>("IdLista")
                        .HasColumnType("int")
                        .HasColumnName("idLista");

                    b.Property<string>("Observacion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("observacion");

                    b.HasKey("IdResultado")
                        .HasName("PK__Resultad__CE8B42C441D939A2");

                    b.HasIndex("IdInspeccion");

                    b.HasIndex("IdItem");

                    b.HasIndex("IdLista");

                    b.ToTable("ResultadosInspeccion", (string)null);
                });

            modelBuilder.Entity("APIClientesCarne.Models.RolePermiso", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<bool?>("CanCreate")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanRead")
                        .HasColumnType("bit");

                    b.Property<bool?>("CanUpdate")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TableName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("IdRol")
                        .HasName("PK__RolePerm__2A49584C247CBE5B");

                    b.ToTable("RolePermisos");
                });

            modelBuilder.Entity("APIClientesCarne.Models.SancionIrregularidad", b =>
                {
                    b.Property<int>("IdIrregularidad")
                        .HasColumnType("int")
                        .HasColumnName("idIrregularidad");

                    b.Property<int>("IdSancion")
                        .HasColumnType("int")
                        .HasColumnName("idSancion");

                    b.Property<string>("EstadoSancion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("estadoSancion");

                    b.Property<DateTime?>("FechaAplicada")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaAplicada");

                    b.Property<DateTime?>("FechaResolution")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaResolution");

                    b.HasKey("IdIrregularidad", "IdSancion")
                        .HasName("PK__SancionI__487FB804B9282385");

                    b.HasIndex("IdSancion");

                    b.ToTable("SancionIrregularidad", (string)null);
                });

            modelBuilder.Entity("APIClientesCarne.Models.Sancione", b =>
                {
                    b.Property<int>("IdSancion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSancion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSancion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("monto");

                    b.HasKey("IdSancion")
                        .HasName("PK__Sancione__DEE4F57097B76D17");

                    b.ToTable("Sanciones");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Solicitud", b =>
                {
                    b.Property<int>("IdSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSolicitud");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitud"));

                    b.Property<string>("Coordenadas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoSolicitud")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FechaAdmitida")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaAdmitida");

                    b.Property<DateTime?>("FechaAprobada")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaAprobada");

                    b.Property<int>("IdUsuarioCliente")
                        .HasColumnType("int")
                        .HasColumnName("idUsuarioCliente");

                    b.Property<string>("NombreEst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RNCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoOperacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSolicitud")
                        .HasName("PK__Solicitu__D801DDB84A4E5364");

                    b.HasIndex("IdUsuarioCliente");

                    b.ToTable("Solicitud", (string)null);
                });

            modelBuilder.Entity("APIClientesCarne.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaIngreso");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaNacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("rol");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("username");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A6D39B1ECB");

                    b.HasIndex(new[] { "Username" }, "UQ__Usuario__F3DBC5725DC9BAB7")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("AnimalesLote", b =>
                {
                    b.Property<int>("IdAnimal")
                        .HasColumnType("int")
                        .HasColumnName("idAnimal");

                    b.Property<int>("IdLote")
                        .HasColumnType("int")
                        .HasColumnName("idLote");

                    b.HasKey("IdAnimal", "IdLote")
                        .HasName("PK__Animales__A3CFAAFF6EEDDA5B");

                    b.HasIndex("IdLote");

                    b.ToTable("AnimalesLotes", (string)null);
                });

            modelBuilder.Entity("APIClientesCarne.Models.Alerta", b =>
                {
                    b.HasOne("APIClientesCarne.Models.Irregularidad", "IdIrregularidadNavigation")
                        .WithMany("Alerta")
                        .HasForeignKey("IdIrregularidad")
                        .IsRequired()
                        .HasConstraintName("FK__Alertas__idIrreg__3C34F16F");

                    b.Navigation("IdIrregularidadNavigation");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Animale", b =>
                {
                    b.HasOne("APIClientesCarne.Models.Establecimiento", "IdEstablecimientoSacrificioNavigation")
                        .WithMany("Animales")
                        .HasForeignKey("IdEstablecimientoSacrificio")
                        .IsRequired()
                        .HasConstraintName("FK__Animales__idEsta__1DB06A4F");

                    b.Navigation("IdEstablecimientoSacrificioNavigation");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Documento", b =>
                {
                    b.HasOne("APIClientesCarne.Models.LotesProducto", "IdLoteNavigation")
                        .WithMany("Documentos")
                        .HasForeignKey("IdLote")
                        .IsRequired()
                        .HasConstraintName("FK__Documento__idLot__3F115E1A");

                    b.Navigation("IdLoteNavigation");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Inspeccione", b =>
                {
                    b.HasOne("APIClientesCarne.Models.Admin", "IdAdminNavigation")
                        .WithMany("Inspecciones")
                        .HasForeignKey("IdAdmin")
                        .IsRequired()
                        .HasConstraintName("FK__Inspeccio__idAdm__29221CFB");

                    b.HasOne("APIClientesCarne.Models.Establecimiento", "IdEstablecimientoNavigation")
                        .WithMany("Inspecciones")
                        .HasForeignKey("IdEstablecimiento")
                        .IsRequired()
                        .HasConstraintName("FK__Inspeccio__idEst__2739D489");

                    b.HasOne("APIClientesCarne.Models.Solicitud", "IdSolicitudNavigation")
                        .WithMany("Inspecciones")
                        .HasForeignKey("IdSolicitud")
                        .IsRequired()
                        .HasConstraintName("FK__Inspeccio__idSol__282DF8C2");

                    b.HasOne("APIClientesCarne.Models.Usuario", "IdUsuarioInspectorNavigation")
                        .WithMany("Inspecciones")
                        .HasForeignKey("IdUsuarioInspector")
                        .IsRequired()
                        .HasConstraintName("FK__Inspeccio__idUsu__2A164134");

                    b.Navigation("IdAdminNavigation");

                    b.Navigation("IdEstablecimientoNavigation");

                    b.Navigation("IdSolicitudNavigation");

                    b.Navigation("IdUsuarioInspectorNavigation");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Irregularidad", b =>
                {
                    b.HasOne("APIClientesCarne.Models.Establecimiento", "IdEstablecimientoNavigation")
                        .WithMany("Irregularidads")
                        .HasForeignKey("IdEstablecimiento")
                        .IsRequired()
                        .HasConstraintName("FK__Irregular__idEst__37703C52");

                    b.HasOne("APIClientesCarne.Models.LotesProducto", "IdLoteNavigation")
                        .WithMany("Irregularidads")
                        .HasForeignKey("IdLote")
                        .IsRequired()
                        .HasConstraintName("FK__Irregular__idLot__3864608B");

                    b.HasOne("APIClientesCarne.Models.ResultadosInspeccion", "IdResultadoInspeccionNavigation")
                        .WithMany("Irregularidads")
                        .HasForeignKey("IdResultadoInspeccion")
                        .IsRequired()
                        .HasConstraintName("FK__Irregular__idRes__395884C4");

                    b.Navigation("IdEstablecimientoNavigation");

                    b.Navigation("IdLoteNavigation");

                    b.Navigation("IdResultadoInspeccionNavigation");
                });

            modelBuilder.Entity("APIClientesCarne.Models.ItemsVerificacion", b =>
                {
                    b.HasOne("APIClientesCarne.Models.ListaVerificacion", "IdListaNavigation")
                        .WithMany("ItemsVerificacions")
                        .HasForeignKey("IdLista")
                        .IsRequired()
                        .HasConstraintName("FK__ItemsVeri__idLis__2FCF1A8A");

                    b.Navigation("IdListaNavigation");
                });

            modelBuilder.Entity("APIClientesCarne.Models.ListaVerificacion", b =>
                {
                    b.HasOne("APIClientesCarne.Models.Normativa", "IdNormativaNavigation")
                        .WithMany("ListaVerificacions")
                        .HasForeignKey("IdNormativa")
                        .IsRequired()
                        .HasConstraintName("FK__ListaVeri__idNor__2CF2ADDF");

                    b.Navigation("IdNormativaNavigation");
                });

            modelBuilder.Entity("APIClientesCarne.Models.LotesProducto", b =>
                {
                    b.HasOne("APIClientesCarne.Models.Establecimiento", "IdEstablecimientoNavigation")
                        .WithMany("LotesProductos")
                        .HasForeignKey("IdEstablecimiento")
                        .IsRequired()
                        .HasConstraintName("FK__LotesProd__idEst__1AD3FDA4");

                    b.Navigation("IdEstablecimientoNavigation");
                });

            modelBuilder.Entity("APIClientesCarne.Models.ResultadosInspeccion", b =>
                {
                    b.HasOne("APIClientesCarne.Models.Inspeccione", "IdInspeccionNavigation")
                        .WithMany("ResultadosInspeccions")
                        .HasForeignKey("IdInspeccion")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__idIns__32AB8735");

                    b.HasOne("APIClientesCarne.Models.ItemsVerificacion", "IdItemNavigation")
                        .WithMany("ResultadosInspeccions")
                        .HasForeignKey("IdItem")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__idIte__3493CFA7");

                    b.HasOne("APIClientesCarne.Models.ListaVerificacion", "IdListaNavigation")
                        .WithMany("ResultadosInspeccions")
                        .HasForeignKey("IdLista")
                        .IsRequired()
                        .HasConstraintName("FK__Resultado__idLis__339FAB6E");

                    b.Navigation("IdInspeccionNavigation");

                    b.Navigation("IdItemNavigation");

                    b.Navigation("IdListaNavigation");
                });

            modelBuilder.Entity("APIClientesCarne.Models.SancionIrregularidad", b =>
                {
                    b.HasOne("APIClientesCarne.Models.Irregularidad", "IdIrregularidadNavigation")
                        .WithMany("SancionIrregularidads")
                        .HasForeignKey("IdIrregularidad")
                        .IsRequired()
                        .HasConstraintName("FK__SancionIr__idIrr__41EDCAC5");

                    b.HasOne("APIClientesCarne.Models.Sancione", "IdSancionNavigation")
                        .WithMany("SancionIrregularidads")
                        .HasForeignKey("IdSancion")
                        .IsRequired()
                        .HasConstraintName("FK__SancionIr__idSan__42E1EEFE");

                    b.Navigation("IdIrregularidadNavigation");

                    b.Navigation("IdSancionNavigation");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Solicitud", b =>
                {
                    b.HasOne("APIClientesCarne.Models.Usuario", "IdUsuarioClienteNavigation")
                        .WithMany("Solicituds")
                        .HasForeignKey("IdUsuarioCliente")
                        .IsRequired()
                        .HasConstraintName("FK__Solicitud__idUsu__245D67DE");

                    b.Navigation("IdUsuarioClienteNavigation");
                });

            modelBuilder.Entity("AnimalesLote", b =>
                {
                    b.HasOne("APIClientesCarne.Models.Animale", null)
                        .WithMany()
                        .HasForeignKey("IdAnimal")
                        .IsRequired()
                        .HasConstraintName("FK__AnimalesL__idAni__208CD6FA");

                    b.HasOne("APIClientesCarne.Models.LotesProducto", null)
                        .WithMany()
                        .HasForeignKey("IdLote")
                        .IsRequired()
                        .HasConstraintName("FK__AnimalesL__idLot__2180FB33");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Admin", b =>
                {
                    b.Navigation("Inspecciones");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Establecimiento", b =>
                {
                    b.Navigation("Animales");

                    b.Navigation("Inspecciones");

                    b.Navigation("Irregularidads");

                    b.Navigation("LotesProductos");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Inspeccione", b =>
                {
                    b.Navigation("ResultadosInspeccions");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Irregularidad", b =>
                {
                    b.Navigation("Alerta");

                    b.Navigation("SancionIrregularidads");
                });

            modelBuilder.Entity("APIClientesCarne.Models.ItemsVerificacion", b =>
                {
                    b.Navigation("ResultadosInspeccions");
                });

            modelBuilder.Entity("APIClientesCarne.Models.ListaVerificacion", b =>
                {
                    b.Navigation("ItemsVerificacions");

                    b.Navigation("ResultadosInspeccions");
                });

            modelBuilder.Entity("APIClientesCarne.Models.LotesProducto", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Irregularidads");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Normativa", b =>
                {
                    b.Navigation("ListaVerificacions");
                });

            modelBuilder.Entity("APIClientesCarne.Models.ResultadosInspeccion", b =>
                {
                    b.Navigation("Irregularidads");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Sancione", b =>
                {
                    b.Navigation("SancionIrregularidads");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Solicitud", b =>
                {
                    b.Navigation("Inspecciones");
                });

            modelBuilder.Entity("APIClientesCarne.Models.Usuario", b =>
                {
                    b.Navigation("Inspecciones");

                    b.Navigation("Solicituds");
                });
#pragma warning restore 612, 618
        }
    }
}
